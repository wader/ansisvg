{{- /*
Tries to generate SVG code comptible with browers and inkscape.
For some reason inkscape seems to not like CSS for rect fill etc that much
so currently using <use> instead.
*/ -}}
{{- /*
xml:space="preserve" is used to forces some svg readers (ex inkscape) to not collapse
whitespace only tspan:s preventing underline to be properly rendered.
*/ -}}
<svg width="{{$.Dom.Width}}" height="{{$.Dom.Height}}" {{- if ne $.Dom.ViewBox "" }} viewBox="{{$.Dom.ViewBox}}"{{- end }} xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve">
    <style>
        {{- if gt (len $.Dom.FontEmbedded) 0}}
        @font-face {
            font-family: {{$.Dom.FontName}};
            src: url(data:;base64,{{- base64 $.Dom.FontEmbedded}});
        }
        {{- else if ne $.Dom.FontRef ""}}
        @font-face {
            font-family: {{$.Dom.FontName}};
            src: url({{$.Dom.FontRef}});
        }
        {{- end}}
        * {
            font-family: {{if $.Dom.FontName}}{{$.Dom.FontName}}, {{end}}monospace;
            font-size: {{$.Dom.FontSize}}px;
        }
        tspan, text {
            font-variant-ligatures: none;
            dominant-baseline: central;
            white-space: pre;{{/* draw underline even when whitespace */}}
            fill: {{$.Foreground.Default}};
        }
        .bg {
            stroke-width: "0.5px";
        }
{{- if $.Dom.ClassesUsed.Bold}}
        .bold {
            font-weight: bold;
        }
{{- end}}
{{- if $.Dom.ClassesUsed.Italic}}
        .italic {
            font-style: italic;
        }
{{- end}}
{{- if $.Dom.ClassesUsed.Underline}}
        .underline {
            text-decoration: underline;
        }
{{- end}}
{{- if $.Dom.ClassesUsed.Strikethrough}}
        .strikethrough {
            text-decoration: line-through;
        }
{{- end}}
{{- if $.Dom.ClassesUsed.Dim}}
        .dim {
            opacity: 0.5;
        }
{{- end}}
{{- if anyColorUsed $.Background.ANSIUsed}}
        <!-- Background ANSI colors -->
{{- end}}
{{- range $k, $v := $.ANSIColors -}}
        {{- if index $.Background.ANSIUsed $k}}
        .ba{{$k}} { stroke: {{$v}}; fill: {{$v}}; }
        {{- end}}
{{- end}}
{{- if anyColorUsed $.Foreground.ANSIUsed}}
        <!-- Foreground ANSI colors -->
{{- end}}
{{- range $k, $v := $.ANSIColors -}}
        {{- if index $.Foreground.ANSIUsed $k}}
        .fa{{$k}} { fill: {{$v}}; }
        {{- end}}
{{- end}}
{{- if len $.Dom.BgCustomColors}}
        <!-- Background custom colors -->
{{- end}}
{{- range $k, $v := $.Dom.BgCustomColors}}
        .bc{{$k}} { stroke: {{$v}}; fill: {{$v}}; }
{{- end}}
{{- if len $.Dom.FgCustomColors }}
        <!-- Foreground custom colors -->
{{- end}}
{{- range $k, $v := $.Dom.FgCustomColors}}
        .fc{{$k}} { fill: {{$v}}; }
{{- end}}
    </style>
{{- if not .Transparent}}
    <rect width="100%" height="100%" x="0" y="0" style="fill: {{$.Background.Default}}"/>
{{- end}}
{{- if len $.Dom.BgRects}}
<g class="bg">
{{- range $ri, $r := .Dom.BgRects}}
<rect x="{{$r.X}}" y="{{$r.Y}}" width="{{$r.Width}}" height="{{$r.Height}}" class="{{$r.Color}}"/>
{{- end}}
</g>
{{- end}}
{{- range $li, $l := .Dom.TextElements}}
<text x="{{$l.X}}" y="{{$l.Y}}">{{- range $si, $s := $l.TextSpans}}<tspan{{if ne $s.X ""}} x="{{ $s.X }}"{{end}}{{if ne $s.Class ""}} class="{{$s.Class}}"{{end}}>{{$s.Content}}</tspan>{{- end}}</text>
{{- end}}
</svg>
